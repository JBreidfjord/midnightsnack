Registration/Login:
    ✔ Define User classes in schema.py @done(21-03-06 12:11)
    ✔ Input validation (length, email, matching passwords) @done(21-03-06 12:11)
    ✔ Integrate schema with form for proper form validation @done(21-03-10 16:56)
    ✔ Create registration and login routes @done(21-03-10 20:17)

Profile Pages:
    ☐ Add profile page for each of us with descriptions/info
    ☐ Add our top posts
    ☐ Add our recent posts

☐ Replace Login/Register nav buttons with New Post/Logout when logged in
☐ How to display html elements to only certain users? E.g. delete/edit button for posts, new post button

Form Validation (Register):
    ✔ Fix form in HTML @done(21-03-10 15:09)
    ✔ Fix post request handling @done(21-03-10 16:52)
    ✔ Redirect back to get request after submission @done(21-03-10 19:26)
    ✔ Add optional query for redirect to provide error messages @done(21-03-10 19:26)
    ✔ Add optional query for redirect to provide success message (Registration successful. Welcome, {name}!) @done(21-03-10 19:26)
    ✔ Implement messages into HTML @done(21-03-10 19:26)
    ✔ Add check for if username/email already exists @done(21-03-14 10:58)
    ✔ Change from Query parameters to Cookies @done(21-03-14 11:21)
    ✔ Read cookies in HTML to display errors @done(21-03-14 11:40)

Authentication:
    ✔ Finish reading through FastAPI user guide for auth @done(21-03-12 13:26)
    ✔ Connect to database @done(21-03-12 14:19)
    ☐ Set redirects for login route
    ☐ Lock certain routes behind authentication
    ☐ Change navbar based on login status
    ✔ Logout route/function @done(21-03-13 14:37)
    ✔ Logout button in navbar @done(21-03-13 14:37)
    ☐ Set up redirects for logout route
    ☐ Move all auth related stuff to auth.py
    ☐ Set up router to access routes
    Update database to store tokens and hashed passwords:
        ☐ Change input functions to hash before storing
        ☐ Update existing data
        ☐ Verify model correctness

Password Reset:
    ☐ Mail via Linode, need to enable
    ☐ Set up form/page

Auto-blog:
    ☐ Convert markdown to HTML
    ☐ Create post

New features:
    ☐ Custom 404/status pages

✔ Verify token @done(21-03-13 13:37)
☐ is_admin
☐ can_edit
☐ can_delete
☐ can_post
☐ is_active

✔ Change User schemas, base should contain only import info like username, email, image @done(21-03-13 13:48)

☐ Simplify db tasks, use onstartup and onshutdown events from fastapi